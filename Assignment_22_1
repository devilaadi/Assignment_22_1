import org.apache.spark._
import org.apache.spark.streaming._
import org.apache.spark.streaming.StreamingContext._


val ssc = new StreamingContext(sc, Seconds(10))

/* Create a DStream that will connect to hostname and port, like localhost 9999. As stated earlier, DStream will get created from StreamContext, which in return is created from SparkContext. */
 
val lines = ssc.socketTextStream("localhost",9999)
 
// Using this DStream (lines) we will perform  transformation or output operation.
 
val words = lines.flatMap(_.split(" "))
 
val wordCounts = words.map(x => (x, 1)).reduceByKey(_ + _)
 
wordCounts.print()
 
ssc.start()    // Start the computation
 
ssc.awaitTermination()  // Wait for the computation to terminate


